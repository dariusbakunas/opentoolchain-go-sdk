openapi: 3.0.0
info:
  version: 1.0.0
  title: Open Toolchain
  x-codegen-config:
    python:
      apiPackage: ibm_opentoolchain
    go:
      improvedNameFormattingV2: true
      apiPackage: github.com/dariusbakunas/opentoolchain-go-sdk
  x-acronyms:
    - guid
servers:
  - url: 'https://'
paths:
  /devops-api.{region}.devops.cloud.ibm.com/v1/toolchains/{guid}:
    get:
      security:
        - iamToken: []
      summary: 'Returns details about a particular toolchain'
      operationId: getToolchain
      tags:
        - toolchain
      parameters:
        - name: region
          in: path
          description: Toolchain region
          required: true
          schema:
            type: string
        - name: guid
          in: path
          description: GUID of the toolchain
          required: true
          schema:
            type: string
        - name: include
          in: query
          description: Instructs the API to return the specified content according to the comma-separated list of sections
          required: false
          schema:
            type: string
          example: "fields,services"
      responses:
        '200':
          description: 'Details about a toolchain'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolchainResponse'
        default:
          description: Internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      security:
        - iamToken: []
      operationId: patchToolchain
      summary: 'Update toolchain parameters'
      parameters:
        - name: region
          in: path
          description: Toolchain region
          required: true
          schema:
            type: string
        - name: guid
          in: path
          description: GUID of the toolchain
          required: true
          schema:
            type: string
      requestBody:
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatchToolchainParams"
      responses:
        204:
          description: Toolchain was patched successfully.
        default:
          description: Internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: deleteToolchain
      security:
        - iamToken: []
      description: Delete existing toolchain
      parameters:
        - name: region
          in: path
          description: Toolchain region
          required: true
          schema:
            type: string
        - name: guid
          in: path
          description: GUID of the toolchain
          required: true
          schema:
            type: string
        - name: unbind_deprovision_tools
          in: query
          description: When enabled, unbinds and deprovisions the tools associated with the toolchain.
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '204':
          description: OK
        default:
          description: Internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cloud.ibm.com/devops/setup/deploy:
    post:
      security:
        - iamToken: []
      summary: Headless Toolchain Creation/Update using POST
      operationId: createToolchain
      description: |
        This info is from the document:-
          https://github.com/open-toolchain/sdk/wiki/Toolchain-Creation-page-parameters
      parameters:
        - name: env_id
          in: query
          description: Environment ID
          required: true
          schema:
            type: string
          example: "ibm:yp:us-south"
      requestBody:
        content:
            multipart/form-data:
              schema:
                $ref: "#/components/schemas/CreateToolchainParams"
      responses:
        201:
          description: Toolchain was created successfully.
          headers:
            Location:
              description: The URL of the created toolchain.
              schema:
                type: string
                format: uri
        default:
          description: Internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cloud.ibm.com/devops/service_instances:
    post:
      security:
        - iamToken: [ ]
      summary: Service Instance Creation using POST
      operationId: createServiceInstance
      parameters:
        - name: env_id
          in: query
          description: Environment ID
          required: true
          schema:
            type: string
          example: "ibm:yp:us-south"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceInstanceParams'
      responses:
        200:
          description: Service instance was created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        default:
          description: Internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceError'
  /cloud.ibm.com/devops/service_instances/{guid}:
    get:
      security:
        - iamToken: []
      summary: 'Returns details about a particular service instance'
      operationId: getServiceInstance
      tags:
        - pipeline
      parameters:
        - name: guid
          in: path
          description: GUID of the service instance
          required: true
          schema:
            type: string
        - name: env_id
          in: query
          description: Environment ID
          required: true
          schema:
            type: string
          example: "ibm:yp:us-south"
        - name: toolchainId
          in: query
          description: Toolchain ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Service instance details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceInstanceResponse'
        default:
          description: Internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: deleteServiceInstance
      security:
        - iamToken: [ ]
      description: Delete service instance
      parameters:
        - name: guid
          in: path
          description: GUID of the service instance
          required: true
          schema:
            type: string
        - name: env_id
          in: query
          description: Environment ID
          required: true
          schema:
            type: string
          example: "ibm:yp:us-south"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: ["toolchainId"]
              properties:
                toolchainId:
                  type: string
      responses:
        204:
          description: Service instance was deleted successfully.
        default:
          description: Internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceError'
    patch:
      security:
        - iamToken: [ ]
      operationId: patchServiceInstance
      summary: 'Patch service instance'
      parameters:
        - name: guid
          in: path
          description: GUID of the instance
          required: true
          schema:
            type: string
        - name: env_id
          in: query
          description: Environment ID
          required: true
          schema:
            type: string
          example: "ibm:yp:us-south"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchServiceInstanceParams'
      responses:
        200:
          description: Service instance was patched successfully.
        default:
          description: Internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceError'
  /devops-api.{region}.devops.cloud.ibm.com/v1/tekton-pipelines/{guid}:
    get:
      security:
        - iamToken: []
      summary: 'Returns details about a particular tekton pipeline'
      operationId: getTektonPipeline
      tags:
        - pipeline
      parameters:
        - name: guid
          in: path
          description: GUID of the pipeline
          required: true
          schema:
            type: string
        - name: region
          in: path
          description: Toolchain region
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Details about a pipeline'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TektonPipeline'
        default:
          description: Internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devops-api.{region}.devops.cloud.ibm.com/v1/tekton-pipelines/{guid}/config:
    patch:
      security:
        - iamToken: []
      summary: 'Update tekton pipeline parameters'
      operationId: patchTektonPipeline
      tags:
        - pipeline
      parameters:
        - name: guid
          in: path
          description: GUID of the pipeline
          required: true
          schema:
            type: string
        - name: region
          in: path
          description: Toolchain region
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTektonPipelineParams'
      responses:
          '200':
            description: 'Details about a pipeline'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TektonPipeline'
          default:
            description: Internal error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /devops-api.{region}.devops.cloud.ibm.com/v1/tekton-pipelines/{guid}/definition:
    get:
      security:
        - iamToken: [ ]
      summary: 'Get tekton pipeline definition'
      operationId: getTektonPipelineDefinition
      tags:
        - pipeline
      parameters:
        - name: guid
          in: path
          description: GUID of the pipeline
          required: true
          schema:
            type: string
        - name: env_id
          in: query
          description: Environment ID
          required: true
          schema:
            type: string
          example: "ibm:yp:us-south"
      responses:
        '200':
          description: 'Tekton pipeline definition'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTektonPipelineDefinitionResponse'
        '404':
          description: 'Pipeline does not have definition set'
    post:
      security:
        - iamToken: [ ]
      summary: 'Create tekton pipeline definition'
      operationId: createTektonPipelineDefinition
      tags:
        - pipeline
      parameters:
        - name: guid
          in: path
          description: GUID of the pipeline
          required: true
          schema:
            type: string
        - name: env_id
          in: query
          description: Environment ID
          required: true
          schema:
            type: string
          example: "ibm:yp:us-south"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTektonPipelineDefinitionParams'
      responses:
        '200':
          description: 'Tekton pipeline definition'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTektonPipelineDefinitionResponse'
        '404':
          description: 'Pipeline does not have definition set'
components:
  securitySchemes:
    iamToken:
      type: apiKey
      name: Authorization
      in: header
      description: A Cloud IAM access token is required to access the OpenToolchain APIs.
        The token should be provided in the following format "Bearer [token]",
        for example "Bearer
        eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkdW1teSJ9.J2qaJ4pTWnidXQ3XbMmpAllL2ZiCCNkSoh0k1d7_ct1"
  schemas:
    ServiceInstanceError:
      type: object
      properties:
        message:
          type: string
        description:
          type: string
    Error:
      type: object
      required: [description, status]
      properties:
        description:
          type: string
        details:
          description: Provides additional information about the error.
          type: object
        status:
          type: string
          enum: [error, warning]
    GetServiceInstanceResponse:
      type: object
      properties:
        serviceInstance:
          type: object
          properties:
            instance_id:
              type: string
            dashboard_url:
              type: string
            service_id:
              type: string
            parameters:
              type: object
              additionalProperties: true
    TektonPipeline:
      type: object
      required:
        - name
        - id
        - toolchainId
        - envProperties
      properties:
        name:
          type: string
        dashboard_url:
          type: string
        resourceGroupId:
          type: string
        id:
          type: string
        toolchainId:
          type: string
        pipelineOwner:
          type: string
        enabled:
          type: boolean
        type:
          type: string
        created:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        updated_at_timestamp:
          type: number
        created_timestamp:
          type: number
        envProperties:
          type: array
          items:
            $ref: '#/components/schemas/EnvProperty'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/TektonPipelineInput'
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/TektonPipelineTrigger'
        status:
          type: string
        url:
          type: string
        runs_url:
          type: string
        toolchainCRN:
          type: string
        pipelineDefinitionId:
          type: string
    CreateTektonPipelineDefinitionParams:
      type: object
      properties:
        inputs:
          type: array
          items:
            type: object
            properties:
              scmSource:
                type: object
                properties:
                  path:
                    type: string
                  url:
                    type: string
                  type:
                    type: string
                  blindConnection:
                    type: boolean
                  branch:
                    type: string
              type:
                type: string
              serviceInstanceId:
                type: string
              shardDefinitionId:
                type: string
    CreateTektonPipelineDefinitionResponse:
      type: object
      properties:
        definition:
          type: object
          properties:
            pipelineId:
              type: string
            repoUrl:
              type: string
            branch:
              type: string
            path:
              type: string
            sha:
              type: string
            id:
              type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/TektonPipelineInput'
    GetTektonPipelineDefinitionResponse:
      type: 'object'
      required:
        - id
        - pipelineId
      properties:
        pipelineId:
          type: string
#       resources: [...]
#       listenerMap: {...}
        repoUrl:
          type: string
        branch:
          type: string
        path:
          type: string
        sha:
          type: string
        type:
          type: string
        id:
          type: string
        shardRepos:
          type: array
          items:
            $ref: '#/components/schemas/ShardRepo'
    ShardRepo:
      type: object
      required:
        - repoUrl
        - shardDefinitionId
      properties:
        sha:
          type: string
        shardDefinitionId:
          type: string
        repoUrl:
          type: string
        path:
          type: string
    TektonPipelineInput:
      type: 'object'
      properties:
        type:
          type: string
        serviceInstanceId:
          type: string
        shardDefinitionId:
          type: string
        scmSource:
          type: object
          properties:
            path:
              type: string
            url:
              type: string
            type:
              type: string
            blindConnection:
              type: boolean
            branch:
              type: string
    TektonPipelineTrigger:
      type: 'object'
      required:
        - eventListener
        - type
      properties:
        id:
          type: string
        name:
          type: string
        eventListener:
          type: string
        disabled:
          type: boolean
        scmSource:
          type: object
          properties:
            url:
              type: string
            type:
              type: string
            branch:
              type: string
            pattern:
              type: string
# TODO: this has inconsistent types, it can be string or integer, find workaround
#            hookId:
#              type: integer
        type:
          type: string
        events:
          type: object
          properties:
            push:
              type: boolean
            pull_request:
              type: boolean
            pull_request_closed:
              type: boolean
        serviceInstanceId:
          type: string
    EnvProperty:
      type: 'object'
      required:
        - name
        - value
        - type
      properties:
        name:
          type: string
        value:
          type: string
        type:
          type: string
    ToolchainResponse:
      type: object
      properties:
        total_results:
          type: number
        items:
          type: array
          items:
            $ref: '#/components/schemas/Toolchain'
    Toolchain:
      type: object
      required:
        - toolchain_guid
        - name
      properties:
        toolchain_guid:
          type: string
        name:
          type: string
        description:
          type: string
        key:
          type: string
        container:
          $ref: '#/components/schemas/Container'
        crn:
          type: string
        created:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        creator:
          type: string
        generator:
          type: string
        template:
          type: object
          properties:
            getting_started:
              type: string
            services_total:
              type: integer
            name:
              type: string
            type:
              type: string
            url:
              type: string
            source:
              type: string
            locale:
              type: string
        tags:
          type: array
          items:
            type: string
        lifecycle_messaging_webhook_id:
          type: string
        region_id:
          type: string
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    Service:
      type: object
      required:
        - "service_id"
      properties:
        broker_id:
          type: string
        service_id:
          type: string
        container:
          $ref: '#/components/schemas/Container'
        updated_at:
          type: string
          format: date-time
        parameters:
          type: object
          additionalProperties: true
        status:
          type: object
          properties:
            state:
              type: string
        dashboard_url:
          type: string
        region_id:
          type: string
        instance_id:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        url:
          type: string
        toolchain_binding:
          type: object
          properties:
            status:
              type: object
              properties:
                state:
                  type: string
            name:
              type: string
            webhook_id:
              type: string
    Container:
      type: object
      properties:
        guid:
          type: string
        type:
          type: string
    PatchToolchainParams:
      type: object
      required: [name]
      properties:
        name:
          type: string
          description: "Toolchain name"
        description:
          type: string
    PatchTektonPipelineParams:
      type: object
      properties:
        worker:
          type: object
          properties:
            workerId:
              type: string
            workerName:
              type: string
            workerType:
              type: string
        envProperties:
          type: array
          items:
            $ref: '#/components/schemas/EnvProperty'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/TektonPipelineInput'
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/TektonPipelineTrigger'
        pipelineDefinitionId:
          type: string
    CreateServiceInstanceParams:
      type: object
      required: [toolchainId, serviceId]
      properties:
        toolchainId:
          type: string
        serviceId:
          type: string
        parameters:
          type: object
          properties:
            api_key:
              type: string
            service_key:
              type: string
            key_type:
              type: string
            service_id:
              type: string
            service_name:
              type: string
            service_url:
              type: string
            user_email:
              type: string
            user_phone:
              type: string
            authorized:
              type: string
            channel_name:
              type: string
            team_url:
              type: string
            pipeline_start:
              type: boolean
            pipeline_success:
              type: boolean
            pipeline_fail:
              type: boolean
            toolchain_bind:
              type: boolean
            toolchain_unbind:
              type: boolean
            api_token:
              type: string
            git_id:
              type: string
            api_root_url:
              type: string
            legal:
              type: boolean
            repo_url:
              type: string
            token_url:
              type: string
            private_repo:
              type: boolean
            has_issues:
              type: boolean
            instance-name:
              type: string
            integration-status:
              type: string
            region:
              type: string
            resource-group:
              type: string
            enable_traceability:
              type: boolean
            name:
              type: string
            type:
              type: string
            ui_pipeline:
              type: boolean
    PatchServiceInstanceParams:
      type: object
      required: [ toolchainId, serviceId ]
      properties:
        toolchainId:
          type: string
        service_id:
          type: string
        parameters:
          type: object
          properties:
            api_key:
              type: string
            service_key:
              type: string
            key_type:
              type: string
            service_id:
              type: string
            service_name:
              type: string
            service_url:
              type: string
            user_email:
              type: string
            user_phone:
              type: string
            name:
              type: string
            type:
              type: string
            ui_pipeline:
              type: boolean
            repo_url:
              type: string
            private_repo:
              type: boolean
            has_issues:
              type: boolean
            enable_traceability:
              type: boolean
            instance-name:
              type: string
            integration-status:
              type: string
            region:
              type: string
            resource-group:
              type: string
            channel_name:
              type: string
            team_url:
              type: string
            pipeline_start:
              type: boolean
            pipeline_success:
              type: boolean
            pipeline_fail:
              type: boolean
            toolchain_bind:
              type: boolean
            toolchain_unbind:
              type: boolean
            api_token:
              type: string
    CreateToolchainParams:
      type: object
      required: [repository]
      additionalProperties: true
      properties:
        repository:
          type: string
          description: |
            The URL of the Git repository containing the template.
            (For example:- https://github.com/open-toolchain/simple-toolchain)
        autocreate:
          type: boolean
          description: |
             If this param is not provided, then the creation will be ignored
             and it will just load the toolchain creation page.
        resourceGroupId:
          type: string
          description: |
            The GUID of resource group where toolchain will be created.
            Pass this parameter, if you want to create the toolchain inside the resource group instead of an org.
        repository_token:
          type: string
          description: |
            Optional git api token to access template repository
        branch:
          type: string
          description: |
            The Git branch name that the template will be read from.
            Optional. Defaults to `master`
    ServiceParams:
      type: object
      properties:
        label:
          type: string
        type:
          type: string
        name:
          type: string


